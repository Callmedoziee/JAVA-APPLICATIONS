/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tutorial.desktop.app.project;
import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.*;
//import java.awt.*;
import java.util.*;
import javafx.scene.paint.Color;
/**
 *
 * @author callmedoziee
 */
public class TICTACTOE extends javax.swing.JFrame {

    /**
     * Creates new form TICTACTOE
     */
    public TICTACTOE() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        Reset = new javax.swing.JButton();
        jBtn3 = new javax.swing.JButton();
        jBtn6 = new javax.swing.JButton();
        jBtn9 = new javax.swing.JButton();
        jBtn8 = new javax.swing.JButton();
        jBtn7 = new javax.swing.JButton();
        jBtn4 = new javax.swing.JButton();
        jBtn1 = new javax.swing.JButton();
        jBtn2 = new javax.swing.JButton();
        jBtn5 = new javax.swing.JButton();
        EndBtn = new javax.swing.JButton();
        StartOver = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        PlayerScore = new javax.swing.JTextField();
        ComputerScore = new javax.swing.JTextField();
        UserPlayer = new javax.swing.JLabel();
        Computer = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Exitbtn = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 384, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton8.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("19CG026448 Nwosu Chiedozie");

        jPanel1.setName("jBtn3"); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setName("jBtn3"); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });
        jPanel4.add(Reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, -1, 30));

        jBtn3.setName("jBtn3"); // NOI18N
        jBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn3ActionPerformed(evt);
            }
        });
        jPanel4.add(jBtn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 80, 51));

        jBtn6.setName("jBtn6"); // NOI18N
        jBtn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn6ActionPerformed(evt);
            }
        });
        jPanel4.add(jBtn6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 80, 51));

        jBtn9.setName("jBtn9"); // NOI18N
        jBtn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn9ActionPerformed(evt);
            }
        });
        jPanel4.add(jBtn9, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 80, 51));

        jBtn8.setName("jBtn8"); // NOI18N
        jBtn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn8ActionPerformed(evt);
            }
        });
        jPanel4.add(jBtn8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 80, 51));

        jBtn7.setName("jBtn7"); // NOI18N
        jBtn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn7ActionPerformed(evt);
            }
        });
        jPanel4.add(jBtn7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 80, 51));

        jBtn4.setName("jBtn4"); // NOI18N
        jBtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn4ActionPerformed(evt);
            }
        });
        jPanel4.add(jBtn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 80, 51));

        jBtn1.setName("jBtn1"); // NOI18N
        jBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn1ActionPerformed(evt);
            }
        });
        jPanel4.add(jBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 80, 51));

        jBtn2.setName("jBtn2"); // NOI18N
        jBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn2ActionPerformed(evt);
            }
        });
        jPanel4.add(jBtn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 80, 51));

        jBtn5.setName("jBtn5"); // NOI18N
        jBtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn5ActionPerformed(evt);
            }
        });
        jPanel4.add(jBtn5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 80, 51));

        EndBtn.setText("End");
        EndBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndBtnActionPerformed(evt);
            }
        });
        jPanel4.add(EndBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 50, 30));

        StartOver.setText("New Game");
        StartOver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartOverActionPerformed(evt);
            }
        });
        jPanel4.add(StartOver, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, -1, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Click to Play");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 30));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 330));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PlayerScore.setEditable(false);
        PlayerScore.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PlayerScore.setText("0");
        PlayerScore.setMinimumSize(new java.awt.Dimension(30, 30));
        jPanel3.add(PlayerScore, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 66, -1));

        ComputerScore.setEditable(false);
        ComputerScore.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ComputerScore.setText("0");
        ComputerScore.setMinimumSize(new java.awt.Dimension(30, 30));
        jPanel3.add(ComputerScore, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 66, -1));

        UserPlayer.setText("Player");
        jPanel3.add(UserPlayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 20));

        Computer.setText("Computer");
        jPanel3.add(Computer, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Scores");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 2, 260, 30));

        Exitbtn.setText("Exit");
        Exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitbtnActionPerformed(evt);
            }
        });
        jPanel3.add(Exitbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 50, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//    TICTACTOE two = new TICTACTOE();
    public String username;    
    public String firstname;
    public String lastname;

    
    public String userChoice;
    public String otherChoice;
            int counter = 0;
            int userscore = 0;
            int compscore = 0;
            Boolean userWinner = false;

//    ArrayList<JButton> jbuttons = new ArrayList<JButton>();

    
    private int getRandom(){
        int randomNumber, max = 9, min=1;
        Random num = new Random();
        randomNumber =(int)Math.floor(Math.random()*(max-min+1)+min);
        return randomNumber;
    }
    
    private void computerTurn(){
        int compChoice;
        compChoice = getRandom();
//        JOptionPane.showMessageDialog(null, compChoice);
        String x = "jBtn" + (compChoice);   
        JButton[] button = {jBtn1,jBtn2,jBtn3,jBtn4,jBtn5,jBtn6,jBtn7,jBtn8,jBtn9}; 
        Boolean isAllTicked = false;
        for(int i = 0; i<button.length; i++){
                if(button[i].getText() == ""){
                   isAllTicked = false;    
                   break;
                }
                else{
                    isAllTicked = true;
                }   
        }
        if(isAllTicked == true){
            
            return;
        }
        else{
             for(int i = 0; i<button.length; i++){
                if(x.equalsIgnoreCase(button[i].getName())){
                    if(button[i].getText() == ""){
                        button[i].setText(otherChoice.toUpperCase());
                        button[i].setEnabled(false);
                    }
                   else{
                      
//                        JOptionPane.showMessageDialog(null, (compChoice + "not unique"));
                        computerTurn();

                    }
                }       
        }
       }
   
    }
    
    private void resetButtons(){
        JButton[] button = {jBtn1,jBtn2,jBtn3,jBtn4,jBtn5,jBtn6,jBtn7,jBtn8,jBtn9}; 
        for(int i = 0; i<button.length; i++){
            button[i].setText("");
            button[i].setEnabled(true);
        }

        
    }
    private int whoWins(){
                JButton[] button = {jBtn1,jBtn2,jBtn3,jBtn4,jBtn5,jBtn6,jBtn7,jBtn8,jBtn9}; 
String b1,b2,b3,b4,b5,b6,b7,b8,b9;
b1 = button[0].getText().toUpperCase();
b2 = button[1].getText().toUpperCase();
b3 = button[2].getText().toUpperCase();
b4 = button[3].getText().toUpperCase();
b5 = button[4].getText().toUpperCase();
b6 = button[5].getText().toUpperCase();
b7 = button[6].getText().toUpperCase();
b8 = button[7].getText().toUpperCase();
b9 = button[8].getText().toUpperCase();
 


                
                
//        Boolean same = false;
//        int getrow = 0,getcolumn = 0;
//        JButton[][] button = {{jBtn1,jBtn2,jBtn3},{jBtn4,jBtn5,jBtn6},{jBtn7,jBtn8,jBtn9}}; 
////        JButton[] userChoiceList = new JButton[5];
////        List<JButton> userChoiceList = new ArrayList<JButton>();  
////        List<JButton> otherChoiceList = new ArrayList<JButton>();
//
//
//        for(int row = 0; row<button.length; row++){
//            for(int col = 0; col<button.length; col++){
//                if(col < button.length){
//                    if(button[row][col].getText().equals(button[row][col+1].getText()) ){
//                        same = true;
//                        getrow =row;
//                        getcolumn = col;
//                    }
//                    else{
//                    same = false;
//                    }
//                }
//            }
//        }
Boolean isAllTicked = false;

            if(b1 == userChoice && b2== userChoice & b3 == userChoice){
//                    jBtn1.setBackground(Color.CheckBoxMenuItem.selectedItem);
                    JOptionPane.showMessageDialog(null, (UserPlayer.getText() + " wins this round"));
                    userWinner = true;
                    getScore(userWinner);
                    resetButtons();
                }
            else if(b1 == userChoice && b4== userChoice & b7 == userChoice){
                    JOptionPane.showMessageDialog(null, (UserPlayer.getText() + " wins this round"));
                    userWinner = true;
                    getScore(userWinner);
                    resetButtons();

                } 
           else if(b7 == userChoice && b8== userChoice & b9 == userChoice){
                    JOptionPane.showMessageDialog(null, (UserPlayer.getText() + " wins this round"));
                    userWinner = true;
                    getScore(userWinner); 
                    resetButtons();

                }
            else if(b1 == userChoice && b5== userChoice & b9 == userChoice){
                    JOptionPane.showMessageDialog(null, (UserPlayer.getText() + " wins this round"));
                    userWinner = true;
                    getScore(userWinner);
             
                    resetButtons();

                }
              else if(b3 == userChoice && b5== userChoice & b7 == userChoice){
                    JOptionPane.showMessageDialog(null, (UserPlayer.getText() + " wins this round"));
                    userWinner = true;
                    getScore(userWinner);
                                        resetButtons();

                }
                 else if(b4 == userChoice && b5== userChoice & b6 == userChoice){
                    JOptionPane.showMessageDialog(null, (UserPlayer.getText() + " wins this round"));
                    userWinner = true;
                    getScore(userWinner);
                                        resetButtons();

                }
                  else if(b3 == userChoice && b6== userChoice & b9 == userChoice){
                    JOptionPane.showMessageDialog(null, (UserPlayer.getText() + " wins this round"));
                    userWinner = true;
                    getScore(userWinner);
                                        resetButtons();

                    
                }
                     else if(b2 == userChoice && b5== userChoice & b8 == userChoice){
                    JOptionPane.showMessageDialog(null, (UserPlayer.getText() + " wins this round"));
                    userWinner = true;
                    getScore(userWinner);
                                        resetButtons();

                }
            
           else if(b1 == otherChoice && b2== otherChoice & b3 == otherChoice){
               
                    JOptionPane.showMessageDialog(null, (Computer.getText() + " wins this round"));
                    userWinner = false;
                    getScore(userWinner);
                    resetButtons();
                }
            else if(b1 == otherChoice && b4== otherChoice & b7 == otherChoice){
                  JOptionPane.showMessageDialog(null, (Computer.getText() + " wins this round"));
                    userWinner = false;
                    getScore(userWinner);
                    resetButtons();

                } 
           else if(b7 == otherChoice && b8== otherChoice & b9 == otherChoice){
                    JOptionPane.showMessageDialog(null, (Computer.getText() + " wins this round"));
                    userWinner = false;
                    getScore(userWinner);
                    resetButtons();

                }
             else if(b1 == otherChoice && b5== otherChoice & b9 == otherChoice){
                   JOptionPane.showMessageDialog(null, (Computer.getText() + " wins this round"));
                    userWinner = false;
                    getScore(userWinner);
                    resetButtons();

                }
              else if(b3 == otherChoice && b5== otherChoice & b7 == otherChoice){
                  JOptionPane.showMessageDialog(null, (Computer.getText() + " wins this round"));
                    userWinner = false;
                    getScore(userWinner);
                    resetButtons();
                }
                 else if(b4 == otherChoice && b5== otherChoice & b6 == otherChoice){
                   JOptionPane.showMessageDialog(null, (Computer.getText() + " wins this round"));
                    userWinner = false;
                    getScore(userWinner);
                    resetButtons();
                }
                  else if(b3 == otherChoice && b6== otherChoice & b9 == otherChoice){
                    JOptionPane.showMessageDialog(null, (Computer.getText() + " wins this round"));
                    userWinner = false;
                    getScore(userWinner);
                    resetButtons();
                    
                }
                     else if(b2 == otherChoice && b5== otherChoice & b8 == otherChoice){
                    JOptionPane.showMessageDialog(null, (Computer.getText() + " wins this round"));
                    userWinner = false;
                    getScore(userWinner);
                    resetButtons();

                    }
                      else{
                        for(int i = 0; i<button.length; i++){
                                        if(button[i].getText() == ""){
                                           isAllTicked = false;    
                                           break;
                                        }
                                        else{
                                            isAllTicked = true;
                                        }   
                                }
                                if(isAllTicked == true){
                                    JOptionPane.showMessageDialog(null, "Tie, no point awarded");
                                    resetButtons();
                                }
                      }
        return 0;
    }
    
    private void getScore(Boolean user){
        if(user == true){
            userscore++;
            PlayerScore.setText(String.valueOf(userscore));
        }
        else{
            compscore++;
            ComputerScore.setText(String.valueOf(compscore));

        }
        
    }
    private void jBtn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn9ActionPerformed
        // TODO add your handling code here:
        if(jBtn9.getText() == ""){
            jBtn9.setText(userChoice.toUpperCase());
            jBtn9.setEnabled(false);
           computerTurn();
           whoWins();

        }               
        else{
            jBtn9.setEnabled(false);
        }
    }//GEN-LAST:event_jBtn9ActionPerformed

    private void EndBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndBtnActionPerformed
        // TODO add your handling code here:
       jBtn1.setEnabled(false);    
       jBtn2.setEnabled(false);
       jBtn3.setEnabled(false);
       jBtn4.setEnabled(false);
       jBtn5.setEnabled(false);
       jBtn6.setEnabled(false);
       jBtn7.setEnabled(false);
       jBtn8.setEnabled(false);
       jBtn9.setEnabled(false);
       if(userscore > compscore){
        JOptionPane.showMessageDialog(null,("Amazing work there, Congrats on your win! \n Your point: " + (userscore - compscore)));
       }
       else if(compscore > userscore){
        JOptionPane.showMessageDialog(null,("Too bad, Better Luck next time \n Your point: " + (compscore-userscore)));
       }
       else{
        JOptionPane.showMessageDialog(null,("Game ends as a Tie \n Your point: " + userscore));

       }
       try{
           
            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/highscores", "root", "");
           String sql = "INSERT INTO highscore values(?,?,?,?)";
           RegisterForm y = new RegisterForm();
                PreparedStatement ps = (PreparedStatement) conn.prepareStatement(sql);
                ps.setString(1,UserPlayer.getText());   
//                ps.setString(2,y.FirstNameTxt.getText());
                ps.setString(2,firstname);
                ps.setString(3,lastname);

//                ps.setString(3,y.LastNameTxt.getText());
                ps.setInt(4,Math.abs(userscore-compscore));
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Your data has been saved successfully");
                EndBtn.setEnabled(false);
                StartOver.setEnabled(false);
       }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage(), "Error",JOptionPane.INFORMATION_MESSAGE);
                

            }
            
       
    }//GEN-LAST:event_EndBtnActionPerformed

    private void jBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn1ActionPerformed
        // TODO add your handling code here:
        if(jBtn1.getText() == ""){
            jBtn1.setText(userChoice.toUpperCase());
            jBtn1.setEnabled(false);
           computerTurn();  
           whoWins();
           
        }               
        else{
            jBtn1.setEnabled(false);
        }
    }//GEN-LAST:event_jBtn1ActionPerformed

    private void jBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn2ActionPerformed
        // TODO add your handling code here:
        if(jBtn2.getText() == ""){
            jBtn2.setText(userChoice.toUpperCase());
            jBtn2.setEnabled(false);
            computerTurn();
           whoWins();

        }               
        else{
            jBtn2.setEnabled(false);
        }
    }//GEN-LAST:event_jBtn2ActionPerformed

    private void jBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn3ActionPerformed
        // TODO add your handling code here:
        if(jBtn3.getText() == ""){
            jBtn3.setText(userChoice.toUpperCase());
            jBtn3.setEnabled(false);
           computerTurn();    
           whoWins();

        }               
        else{
            jBtn3.setEnabled(false);
        }
    }//GEN-LAST:event_jBtn3ActionPerformed

    private void jBtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn4ActionPerformed
        // TODO add your handling code here:
        if(jBtn4.getText() == ""){
            jBtn4.setText(userChoice.toUpperCase());
            jBtn4.setEnabled(false);
           computerTurn();
           whoWins();

        }               
        else{
            jBtn4.setEnabled(false);
        }
    }//GEN-LAST:event_jBtn4ActionPerformed

    private void jBtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn5ActionPerformed
        // TODO add your handling code here:
        if(jBtn5.getText() == ""){
            jBtn5.setText(userChoice.toUpperCase());
            jBtn5.setEnabled(false);
           computerTurn();
           whoWins();

        }               
        else{
            jBtn5.setEnabled(false);
        }
    }//GEN-LAST:event_jBtn5ActionPerformed

    private void jBtn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn6ActionPerformed
        // TODO add your handling code here:
        if(jBtn6.getText() == ""){
            jBtn6.setText(userChoice.toUpperCase());
            jBtn6.setEnabled(false);
           computerTurn();        
           whoWins();

        }               
        else{
            jBtn6.setEnabled(false);
        }
    }//GEN-LAST:event_jBtn6ActionPerformed

    private void jBtn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn7ActionPerformed
        // TODO add your handling code here:
        if(jBtn7.getText() == ""){
            jBtn7.setText(userChoice.toUpperCase());
            jBtn7.setEnabled(false);
           computerTurn();
           whoWins();

        }               
        else{
            jBtn7.setEnabled(false);
        }
    }//GEN-LAST:event_jBtn7ActionPerformed

    private void jBtn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn8ActionPerformed
        // TODO add your handling code here:
          if(jBtn8.getText() == ""){
            jBtn8.setText(userChoice.toUpperCase());
            jBtn8.setEnabled(false);
           computerTurn();
           whoWins();

        }               
        else{
            jBtn8.setEnabled(false);
        }
        
    }//GEN-LAST:event_jBtn8ActionPerformed

    private void StartOverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartOverActionPerformed
        // TODO add your handling code here:
         try{
           Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/highscores", "root", "");
           String sql = "INSERT INTO highscore values(?,?,?,?)";
           RegisterForm y = new RegisterForm();
                PreparedStatement ps = (PreparedStatement) conn.prepareStatement(sql);
                ps.setString(1,UserPlayer.getText());   
//                ps.setString(2,y.FirstNameTxt.getText());
                ps.setString(2,firstname);
                ps.setString(3,lastname);

//                ps.setString(3,y.LastNameTxt.getText());
                ps.setInt(4,(userscore-compscore));
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Your data has been saved successfully");
                 RegisterForm you = new RegisterForm();
                 you.setVisible(true);
                 setVisible(false);
//                EndBtn.setEnabled(false);
       }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage(), "Error",JOptionPane.INFORMATION_MESSAGE);
                

            }
      
//        jBtn1.setEnabled(true);    
//       jBtn2.setEnabled(true);
//       jBtn3.setEnabled(true);
//       jBtn4.setEnabled(true);
//       jBtn5.setEnabled(true);
//       jBtn6.setEnabled(true);
//       jBtn7.setEnabled(true);
//       jBtn8.setEnabled(true);
//       jBtn9.setEnabled(true);
   
    }//GEN-LAST:event_StartOverActionPerformed

    private void ExitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitbtnActionPerformed
        // TODO add your handling code here:
        AppStart one =  new AppStart();
        one.setVisible(true);
        setVisible(false);


    }//GEN-LAST:event_ExitbtnActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // TODO add your handling code here:
       resetButtons();
       PlayerScore.setText("0");
       ComputerScore.setText("0");
       userscore = 0;
       compscore = 0;
    }//GEN-LAST:event_ResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TICTACTOE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TICTACTOE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TICTACTOE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TICTACTOE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TICTACTOE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Computer;
    private javax.swing.JTextField ComputerScore;
    private javax.swing.JButton EndBtn;
    private javax.swing.JButton Exitbtn;
    public javax.swing.JTextField PlayerScore;
    private javax.swing.JButton Reset;
    private javax.swing.JButton StartOver;
    public javax.swing.JLabel UserPlayer;
    private javax.swing.JButton jBtn1;
    private javax.swing.JButton jBtn2;
    private javax.swing.JButton jBtn3;
    private javax.swing.JButton jBtn4;
    private javax.swing.JButton jBtn5;
    private javax.swing.JButton jBtn6;
    private javax.swing.JButton jBtn7;
    private javax.swing.JButton jBtn8;
    private javax.swing.JButton jBtn9;
    private javax.swing.JButton jButton8;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
